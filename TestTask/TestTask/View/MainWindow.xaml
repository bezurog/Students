<Window x:Class="TestTask.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TestTask"
        mc:Ignorable="d"
        DataContext="{Binding Main, Source={StaticResource Locator}}"
        Title="Задание на собеседование" MinHeight="300" MinWidth="300" Height="350" Width="525" WindowStartupLocation="CenterScreen">
    <Window.Resources>
        <Style x:Key="DefaultStyle">
            <Setter Property="Control.Height" Value="23"></Setter>
        </Style>
        <Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip"
                Value="{Binding RelativeSource={RelativeSource Self},
                    Path=(Validation.Errors)[0].ErrorContent}" />
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <ControlTemplate x:Key="Invalidate">
            <StackPanel Orientation="Horizontal">
                <Border BorderBrush="Red" BorderThickness="1">
                    <AdornedElementPlaceholder />
                </Border>
                <TextBlock Foreground="DarkRed" FontSize="12" FontWeight="Bold">!</TextBlock>
            </StackPanel>
        </ControlTemplate>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1*"/>
            <ColumnDefinition Width="3*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="30"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <ToolBar x:Name="mMainMenu" Height="30" Grid.Row="0" Grid.ColumnSpan="2" >
            <Button x:Name="bAdd" Command="{Binding AddCommand}" Content="Добавить" HorizontalAlignment="Left" Height="{Binding ElementName=mMainMenu, Path=Height}" />
            <Button x:Name="bEdit" Command="{Binding EditCommand}" Content="Редактировать" HorizontalAlignment="Left" Height="{Binding ElementName=mMainMenu, Path=Height}" />
            <Button x:Name="bDelete" Command="{Binding DeleteCommand}" Content="Удалить" HorizontalAlignment="Left" Height="{Binding ElementName=mMainMenu, Path=Height}" />
            <Button x:Name="bQuit" Content="Выход" HorizontalAlignment="Left" Height="{Binding ElementName=mMainMenu, Path=Height}" Click="bQuit_Click" />
        </ToolBar>

        <local:ExtendedDataGrid x:Name="myGrid" Grid.Row="1" Grid.Column="1" Background="{x:Null}" AutoGenerateColumns="False" IsReadOnly="True"  AlternatingRowBackground="LightBlue" AlternationCount="2" 
                                SelectedValue="{Binding SelectedStudent, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                SelectedItemsList="{Binding SelectedStudents, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                ItemsSource="{Binding Students, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
            <DataGrid.Style>
                <Style TargetType="DataGrid">
                    <Setter Property="Visibility" Value="Visible"/>
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=myGrid, Path=Items.Count}" Value="0">
                            <Setter Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.Style>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Id" Width="60" Binding="{Binding Id, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <DataGridTextColumn Header="Студент" Width="120" Binding="{Binding FullName}"/>
                <DataGridTextColumn Header="Возраст" Width="60" Binding="{Binding AgeString}"/>
                <DataGridTextColumn Header="Пол" Width="60" Binding="{Binding Gender, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </DataGrid.Columns>
        </local:ExtendedDataGrid>
        <StackPanel Grid.Row="1">
            <Label Content="Имя" Grid.Row="1" VerticalAlignment="Top"/>
            <TextBox Text="{Binding FirstName, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                     Grid.Row="1" VerticalAlignment="Top" FontSize="12"/>
            <Label Content="Фамилия" Grid.Row="1" VerticalAlignment="Top"/>
            <TextBox Text="{Binding Last, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                     Grid.Row="1" VerticalAlignment="Top" FontSize="12"/>
            <Label Content="Возраст" Grid.Row="1" VerticalAlignment="Top"/>
            <TextBox Text="{Binding Age, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                     Validation.ErrorTemplate="{StaticResource Invalidate}" 
                     Grid.Row="1" VerticalAlignment="Top" FontSize="12"/>
            <Label Content="Пол" Grid.Row="1" VerticalAlignment="Top"/>
            <ComboBox Style="{StaticResource DefaultStyle}" 
                      SelectedIndex="{Binding Gender, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, ValidatesOnDataErrors=True}" 
                      ItemsSource="{Binding GenderTypes}" Grid.Row="1" VerticalAlignment="Top" />
        </StackPanel>
        <TextBlock Grid.Column="1"  Grid.Row="1" TextWrapping="Wrap" Text="{Binding ErrorText, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" TextAlignment="Center" VerticalAlignment="Center"/>
    </Grid>
</Window>
